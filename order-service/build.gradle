plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.8'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
}

group = 'com.food.delivery'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0' // ✅ Add this line
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // If you're using Lombok too
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation project(':user-service-client')
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    // ✅ Temporal SDK (core)
    implementation 'io.temporal:temporal-sdk:1.25.0'

    // ✅ Spring Boot integration for Temporal
    implementation 'io.temporal:temporal-spring-boot-starter:1.25.0'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0" // For Spring Boot 3.4.x
    }
}

test {
    useJUnitPlatform()
}
springBoot {
    mainClass = 'com.jimesh.orderservice.OrderServiceApplication'
}

application {
    mainClass = 'com.jimesh.orderservice.OrderServiceApplication'
}